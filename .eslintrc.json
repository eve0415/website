{
  "root": true,
  "parserOptions": {
    "ecmaVersion": "latest"
  },
  "extends": ["eslint:recommended", "plugin:import/recommended", "prettier"],
  "env": {
    "node": true,
    "commonjs": true,
    "es2024": true
  },
  "settings": {
    "import/external-module-folders": [".yarn", "node_modules"]
  },
  "rules": {
    "import/newline-after-import": "error",
    "import/no-empty-named-blocks": "error",
    "import/no-extraneous-dependencies": "error",
    "import/no-import-module-exports": "error",
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": ["type", "builtin", "external", "internal", "parent", "sibling", "index"],
        "pathGroups": [
          {
            "pattern": "@assets/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": ["type"]
      }
    ],
    "array-callback-return": "error",
    "camelcase": [
      "error",
      {
        "ignoreImports": true,
        "properties": "never"
      }
    ],
    "eqeqeq": "error",
    "logical-assignment-operators": "error",
    "newline-per-chained-call": "error",
    "no-array-constructor": "error",
    "no-await-in-loop": "error",
    "no-constructor-return": "error",
    "no-else-return": "error",
    "no-extra-bind": "error",
    "no-lonely-if": "error",
    "no-new-native-nonconstructor": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-promise-executor-return": "error",
    "no-self-compare": "error",
    "no-template-curly-in-string": "error",
    "no-unmodified-loop-condition": "error",
    "no-unreachable-loop": "error",
    "no-unused-private-class-members": "error",
    "no-useless-computed-key": "error",
    "no-useless-rename": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "operator-assignment": "error",
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-exponentiation-operator": "error",
    "prefer-numeric-literals": "error",
    "prefer-object-has-own": "error",
    "prefer-object-spread": "error",
    "prefer-regex-literals": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "require-atomic-updates": "error",
    "yoda": "error"
  },
  "overrides": [
    {
      "files": ["*.mjs"],
      "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
      },
      "extends": ["eslint:recommended", "plugin:import/recommended", "prettier"],
      "env": {
        "commonjs": false
      },
      "settings": {
        "import/external-module-folders": [".yarn", "node_modules"],
        "import/resolver": {
          "typescript": {}
        }
      },
      "rules": {
        "import/no-commonjs": "error"
      }
    },
    {
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": "latest",
        "project": "./tsconfig.json"
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-type-checked",
        "plugin:@typescript-eslint/strict",
        "plugin:@typescript-eslint/strict-type-checked",
        "plugin:@typescript-eslint/stylistic",
        "plugin:@typescript-eslint/stylistic-type-checked",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "prettier"
      ],
      "settings": {
        "import/external-module-folders": [".yarn", "node_modules"],
        "import/resolver": {
          "typescript": {}
        }
      },
      "rules": {
        "@typescript-eslint/consistent-type-exports": [
          "error",
          {
            "fixMixedExportsWithInlineTypeSpecifier": false
          }
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "disallowTypeAnnotations": false
          }
        ],
        "@typescript-eslint/method-signature-style": "error",
        "@typescript-eslint/no-import-type-side-effects": "error",
        "@typescript-eslint/no-use-before-define": ["error", "nofunc"],
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-useless-empty-export": "error",
        "@typescript-eslint/prefer-literal-enum-member": [
          "error",
          {
            "allowBitwiseExpressions": true
          }
        ],
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/sort-type-constituents": "error"
      }
    },
    {
      "files": ["*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": "latest",
        "project": "./tsconfig.json"
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-type-checked",
        "plugin:@typescript-eslint/strict",
        "plugin:@typescript-eslint/strict-type-checked",
        "plugin:@typescript-eslint/stylistic",
        "plugin:@typescript-eslint/stylistic-type-checked",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "next/core-web-vitals",
        "prettier"
      ],
      "settings": {
        "import/external-module-folders": [".yarn", "node_modules"],
        "import/resolver": {
          "typescript": {}
        }
      },
      "env": {
        "node": false,
        "browser": true
      },
      "rules": {
        "@typescript-eslint/consistent-type-exports": [
          "error",
          {
            "fixMixedExportsWithInlineTypeSpecifier": false
          }
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "disallowTypeAnnotations": false
          }
        ],
        "@typescript-eslint/method-signature-style": "error",
        "@typescript-eslint/no-import-type-side-effects": "error",
        "@typescript-eslint/no-use-before-define": ["error", "nofunc"],
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-useless-empty-export": "error",
        "@typescript-eslint/prefer-literal-enum-member": [
          "error",
          {
            "allowBitwiseExpressions": true
          }
        ],
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/sort-type-constituents": "error"
      }
    }
  ]
}
